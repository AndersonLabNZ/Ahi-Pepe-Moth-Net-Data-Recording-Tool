//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MothNet.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MothNet.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon Ahi_Pepe {
            get {
                object obj = ResourceManager.GetObject("Ahi_Pepe", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Ahi_Pepe___Resized {
            get {
                object obj = ResourceManager.GetObject("Ahi_Pepe___Resized", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //Data for the alternate light sources
        ///No artificial light (NONE)
        ///Scattered house lights - mainly orange (HOUSE_LOW)
        ///Scattered house lights - mainly orange (HOUSE_LOW)
        ///Dense housing lights - mainly orange (HOUSE_HIGH)
        ///Dense urban area - multicoloured lights (URBAN)
        ///Street lights - orange (HPNa)
        ///Street lights - White (LEDwh)
        ///Street lights - blue (LEDbl)
        ///Street lights - amber (LEDam)
        ///Large white warehouse or sportsfield lights (LR_HAL)
        ///House lights - mainly orange (HOUSE)
        ///.
        /// </summary>
        internal static string alt_light {
            get {
                return ResourceManager.GetString("alt_light", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //The different directions for aspect (and wind speed)
        ///Flat
        ///N
        ///NNE
        ///NE
        ///ENE
        ///E
        ///ESE
        ///SE
        ///SSE
        ///S
        ///SSW
        ///SW
        ///WSW
        ///W
        ///WNW
        ///NW
        ///NNW.
        /// </summary>
        internal static string aspect {
            get {
                return ResourceManager.GetString("aspect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //The height of the canopy
        ///Bare ground (0)
        ///Approx. ankle height - &lt;5cm (0.05)
        ///Approx. knee height - &lt;40cm (0.4)
        ///Approx. tussock height - &lt;80cm (0.8)
        ///Approx. wheelie bin - &lt;1m (1)
        ///Approx. flax - &lt;1.5m (1.5)
        ///Approx. campervan height - &lt;2m (2)
        ///Approx. height of a London double decker bus - &lt;4m (4)
        ///Approx. house height - &lt;8m (8)
        ///Approx. road street-light height - &lt;12m (12)
        ///Approx. mature cabbage tree height - &lt;20m (20)
        ///Approx. mature kahikatea height &lt;50m (50)
        ///.
        /// </summary>
        internal static string canopy_height {
            get {
                return ResourceManager.GetString("canopy_height", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //The cloud cover information (in oktas)
        ///Sky completely clear (0)
        ///Scattered clouds ~1/8 (1)
        ///Slightly cloudy ~1/4 (2)
        ///Partially ~3/8 (3)
        ///Sky half cloudy ~1/2 (4)
        ///A bit more than half cloudy ~5/8 (5)
        ///Mostly cloudy ~3/4 (6)
        ///Small breaks of clear sky ~7/8 (7)
        ///Overcast - Sky completely cloudy (8)
        ///Sky obscured from view, e.g fog, mist, heavy rain (9)
        ///Unsure (-1).
        /// </summary>
        internal static string cloud_cover {
            get {
                return ResourceManager.GetString("cloud_cover", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //The distance to the nearest form of shrub or tree
        ///Under canopy (0)
        ///Overhanging (1)
        ///Right next to - &lt;1m (2)
        ///Approx. five paces - &lt;5m (3)
        ///Approx. length of a red London bus - &lt;10m (4)
        ///Approx. length of a cricket pitch - &lt;20m (5)
        ///Approx. lenth of an olympic swimming pool - &lt;50m (6)
        ///Approx. length of a hockey field - &lt;100m (7)
        ///Approx. length of the Hindenburg Zeppelin - &lt;250m (8)
        ///Further (9)
        ///.
        /// </summary>
        internal static string distance_shrub_tree {
            get {
                return ResourceManager.GetString("distance_shrub_tree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //The months of the year in a three letter code
        ///JAN
        ///FEB
        ///MAR
        ///APR
        ///MAY
        ///JUN
        ///JUL
        ///AUG
        ///SEP
        ///OCT
        ///NOV
        ///DEC
        ///.
        /// </summary>
        internal static string months {
            get {
                return ResourceManager.GetString("months", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //The phase of the moon
        ///// closest too
        ///Mutuwhenua - New moon (0)
        ///Tamatea-ā-āiō - First quarter moon(7)
        ///Rākaunui - Full moon (14)
        ///Tangaroa-ā-roto  - Last Quater moon (21).
        /// </summary>
        internal static string moon_phase {
            get {
                return ResourceManager.GetString("moon_phase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //The amound of overnight precipitation
        ///None (0)
        ///Mist (1)
        ///Drizzle (2)
        ///Fog (3)
        ///Intermittent light rain (4)
        ///Light rain (5)
        ///Intermittent moderate rain (6)
        ///Moderate rain (7)
        ///Intermittent heavy rain (8)
        ///Heavy rain - &quot;I can&apos;t believe I put the trap out&quot; - BJA (9)
        ///Unsure (-1).
        /// </summary>
        internal static string precipitation {
            get {
                return ResourceManager.GetString("precipitation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //The predator removal regime
        ///No predator control (NC)
        ///1080 (T)
        ///1080 - Kaka Same year as mast (TK)
        ///1080 - Mast Year after mast (TM)
        ///1080 - 3 year cycle (T3)
        ///1080 - 3 year cycle + stoat trapping (T3S)
        ///1080 - 3 year cycle + stoat + rat trapping (T3SR)
        ///1080 - 7 year cycle (T7)
        ///1080 - 7 year cycle + stoat trapping (T7S)
        ///1080 - 7 year cycle + stoat + rat trapping (T7SR)
        ///Other poison (OP)
        ///Stoat traps only (S)
        ///Stoat + rat traps (SR)
        ///Possum ground control (P)
        ///Possum + stoat traps (PS)
        ///Rat traps only [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string predator_removal {
            get {
                return ResourceManager.GetString("predator_removal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //The list of regions in the South Island
        ///Te Rauawa (E)
        ///Te Tahiwi (W)
        ///Te Hiheru (C)
        ///Te Taurapa (S).
        /// </summary>
        internal static string regions {
            get {
                return ResourceManager.GetString("regions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //The settings file headers for the night data
        ///SITE_NAME
        ///NIGHT_DATE
        ///SITENIGHT_ID
        ///SUNSET
        ///SUNRISE
        ///MOON_PHASE
        ///OTHER_LIGHT_SOURCE
        ///DIST_TO_ARTIFICIAL_LIGHT_SOURCE
        ///CLOUD_COVER
        ///PRECIPITATION_OVERNIGHT
        ///KESTRAL_SREIAL
        ///IBUTTON_TAG
        ///AVG_AIR_TEMP_DEGC
        ///MIN_AIR_TEMP_DEGC
        ///MAX_AIR_TEMP_DEGC
        ///AVG_REL_HUMIDITY_PERCENT
        ///MIN_REL_HUMIDITY_PERCENT
        ///MAX_REL_HUMIDITY_PERCENT
        ///AVG_WIND_SPEED_MS
        ///MIN_WIND_SPEED_MS
        ///MAX_WIND_SPEED_MS
        ///AVG_AIR_PRESSURE_MB
        ///MIN_AIR_PRESSURE_MB
        ///MAX_AIR_PRESSURE_MB
        ///WIND_DIRECTION.
        /// </summary>
        internal static string setting_headers_night {
            get {
                return ResourceManager.GetString("setting_headers_night", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //The settings file headers for the night data
        ///SCHOOL_GROUP
        ///LOCATION
        ///SITE_TYPE
        ///SITE_NAME
        ///VEG_RES_REGIME
        ///PREDATOR_REMOVAL_REGIME
        ///REGION
        ///SUB_REGION
        ///LAT_DECDEG
        ///LONG_DECDEG
        ///ACCURACY_M
        ///ALTITUDE_M
        ///SLOPE_DEG
        ///ASPECT
        ///SURROUNDING_VEG
        ///HEIGHT_OF_SURROUNDING_VEG_M
        ///DISTANCE_TO_NEAREST_SHRUB_M
        ///.
        /// </summary>
        internal static string setting_headers_site {
            get {
                return ResourceManager.GetString("setting_headers_site", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //The type of site
        ///Vegetation Restoration / Treatment (VEG_RES)
        ///Mature Native Site / Reference (REF)
        ///Background Site / Control (CON)
        ///.
        /// </summary>
        internal static string site_type {
            get {
                return ResourceManager.GetString("site_type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SWE,Rhapsa scotosialis 
        ///SWE,Schrankia costaestrigalis 
        ///.
        /// </summary>
        internal static string species_list_erebidae {
            get {
                return ResourceManager.GetString("species_list_erebidae", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W,Chalastra pellurgata 
        ///WE,Cleora scriptaria 
        ///SE,Declana egregia 
        ///S,Declana feredayi 
        ///CSWE,Declana floccosa
        ///CSWE,Declana griseata 
        ///W,Declana hermione 
        ///CSWE,Declana junctilinea 
        ///CSWE,Declana leptomera 
        ///SE,Declana niveata 
        ///WE,Gellonia dejectaria 
        ///WE,Gellonia pannularia 
        ///SWE,Ischalis fortinata 
        ///W,Ischalis gallaria 
        ///W,Ischalis nelsonaria 
        ///W,Ischalis variabilis 
        ///C,Pseudocoremia cineracia 
        ///CE,Pseudocoremia colpogramma 
        ///S,Pseudocoremia fascialata 
        ///WE,Pseudocoremia indistincta 
        ///SWE,Pseudocoremia [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string species_list_geometridae {
            get {
                return ResourceManager.GetString("species_list_geometridae", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C,Aoraia aurimaculata
        ///S,Aoraia dinodes
        ///W,Aoraia enysii
        ///S,Aoraia rufivena
        ///CSW,Cladoxycanus minos
        ///S,Heloxycanus patricki
        ///CSWE,Wiseana copularis
        ///E,Wiseana signata
        ///CSWE,Wiseana umbraculata
        ///.
        /// </summary>
        internal static string species_list_hepialidae {
            get {
                return ResourceManager.GetString("species_list_hepialidae", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CSE,Bityla defigurata
        ///CE,Bityla sericea
        ///CSE,Helicoverpa armigera
        ///CE,Agrotis admirationis
        ///E,Agrotis innominata complex
        ///C,Agrotis infusa
        ///CSWE,Agrotis ipsilon
        ///CSWE,Aletia cuneata
        ///C,Aletia falsidica
        ///CE,Aletia mitis
        ///CSWE,Aletia moderata
        ///C,Aletia nobilia
        ///CWE,Aletia virescen
        ///C, Aletia sollennis
        ///E,Austramathes purpurea
        ///CSE,Austramathes fortis
        ///S,Diarsia intermixta
        ///SW,Dipaustica epiastra
        ///E,Ectopatria aspera
        ///SWE,Feredayia graminosa
        ///C,Graphania sp. A
        ///CSWE,Graphania agorastis
        ///SE,Graphania averilla        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string species_list_noctuidae {
            get {
                return ResourceManager.GetString("species_list_noctuidae", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1
        ///2
        ///3
        ///4
        ///5
        ///6
        ///7
        ///8
        ///9
        ///10
        ///11
        ///12
        ///13
        ///14
        ///15
        ///16
        ///17
        ///18
        ///19
        ///.
        /// </summary>
        internal static string species_list_rodents {
            get {
                return ResourceManager.GetString("species_list_rodents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //The subregions for Te Hiheru
        ///Mackenzie (MC)
        ///Otago Lakes (OL)
        ///Central Otago (CO).
        /// </summary>
        internal static string subregions_te_hiheru {
            get {
                return ResourceManager.GetString("subregions_te_hiheru", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //The subregions for Te Rauawa
        ///Nelson (NN)
        ///Buller (BR)
        ///Westland (WD).
        /// </summary>
        internal static string subregions_te_rauawa {
            get {
                return ResourceManager.GetString("subregions_te_rauawa", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //The subregions for Te Tahiwi
        ///Marlborough Sounds (SD)
        ///Marlborough (MB)
        ///Kaikoura (KA)
        ///North Canterbury (NC)
        ///Mid Canterbury (MC)
        ///South Canterbury (SC)
        ///.
        /// </summary>
        internal static string subregions_te_tahiwi {
            get {
                return ResourceManager.GetString("subregions_te_tahiwi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //The subregions for Te Taurapa
        ///Dunedin (DN)
        ///Fiordland (FD)
        ///Southland (SL)
        ///Stewart Island (SI).
        /// </summary>
        internal static string subregions_te_taurapa {
            get {
                return ResourceManager.GetString("subregions_te_taurapa", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //The different typed of surroundng vegetation, with a three letter code
        ///School playing field (SCP)
        ///Short grazed pasture (SGP)
        ///Irrigated dairy pasture (IDP)
        ///Rough grass (RGR)
        ///Short native tussock grassland (SNT)
        ///Native tall tussock grassland (TNT)
        ///Short alpine shrubland (SAS)
        ///Costal dunes (CSD)
        ///Costal salt meadow (CSM)
        ///Flaxland (FLX)
        ///Riverside (RVR)
        ///Mostly exotic garden plants (EXG)
        ///Mostly native garden plants (NVG)
        ///Native shrubland (NVS)
        ///Manuka / Kanuka shrubland (MKS)
        ///Exotic gorse broom sh [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string surrounding_vegetation {
            get {
                return ResourceManager.GetString("surrounding_vegetation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //File for the vegetation restoration data
        /////might be that this should have been three seperate buttons 
        ///Planted - less than 1 year old (PL_1)
        ///Planted - one to 2 year old (PL_2)
        ///Planted - 2 to 5 year old (PL_5)
        ///Planted - 5 to 10 year old (PL_10)
        ///Planted - 10 to 20 year old (PL_20)
        ///Planted - more than 20 year old (PL_old)
        ///
        ///Planted, large herbivore fencing - less than 1 year old (PL_HF1)
        ///Planted, large herbivore fencing - one to 2 year old (PL_HF2)
        ///Planted, large herbivore fencing - 2 to 5 year old [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string vegetation_restoration {
            get {
                return ResourceManager.GetString("vegetation_restoration", resourceCulture);
            }
        }
    }
}
